parcelRequire=function(e,n,r,t){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function c(r,t){if(!n[r]){if(!e[r]){var i="function"==typeof parcelRequire&&parcelRequire;if(!t&&i)return i(r,!0);if(o)return o(r,!0);if(u&&"string"==typeof r)return u(r);var a=new Error("Cannot find module '"+r+"'");throw a.code="MODULE_NOT_FOUND",a}l.resolve=function(n){return e[r][1][n]||n},l.cache={};var f=n[r]=new c.Module(r);e[r][0].call(f.exports,l,f,f.exports,this)}return n[r].exports;function l(e){return c(l.resolve(e))}}c.isParcelRequire=!0,c.Module=function(e){this.id=e,this.bundle=c,this.exports={}},c.modules=e,c.cache=n,c.parent=o,c.register=function(n,r){e[n]=[function(e,n){n.exports=r},{}]};for(var a=0;a<r.length;a++)try{c(r[a])}catch(e){i||(i=e)}if(r.length){var f=c(r[r.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=f:"function"==typeof define&&define.amd&&define((function(){return f}))}if(parcelRequire=c,i)throw i;return c}({lDcJ:[function(e,n,r){var t,i=window.innerWidth<1e3;function o(){if(window.innerWidth<1e3&&i)t&&t.destroy(),i=!1;else if(!i)if(window.Parallax)t=new Parallax(document.getElementById("scene")),i=!0;else{var e=document.createElement("script");e.src="./dist/parallax.min.js",document.getElementsByTagName("head")[0].appendChild(e),e.onload=function(){t=new Parallax(document.getElementById("scene")),i=!0}}}window.addEventListener("resize",o.bind(this)),new Promise((function(e){o(),e()}))},{}]},{},["lDcJ"]);